@page
@using System.Text.Json
@model GroupSessionsModel
@{
    ViewData["Title"] = "–ì—Ä—É–ø–æ–≤—ñ —Å–µ—Å—ñ—ó";
}

<div class="container mt-5">
    <h2>üìÖ –ì—Ä—É–ø–æ–≤—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è</h2>

    @if (Model.Sessions.Any())
    {
        <table class="table table-bordered">
            <thead>
            <tr>
                <th>–ù–∞–∑–≤–∞</th>
                <th>–ó–∞–ª</th>
                <th>–¢—Ä–µ–Ω–µ—Ä</th>
                <th>–ü–æ—á–∞—Ç–æ–∫</th>
                <th>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å (—Ö–≤)</th>
                <th>–£—á–∞—Å–Ω–∏–∫–∏</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var s in Model.Sessions)
            {
                <tr>
                    <td>@s.Title</td>
                    <td>@s.GymName</td>
                    <td>@s.TrainerName</td>
                    <td>@s.StartTime.ToString("dd.MM.yyyy HH:mm")</td>
                    <td>@s.Duration</td>
                    <td>@s.CurrentParticipants / @s.MaxParticipants</td>
                    <td>
                        @if (Model.UserSessionIds.Contains(s.Id))
                        {
                            <form method="post" asp-page-handler="Cancel" asp-route-sessionId="@s.Id">
                                <button class="btn btn-outline-danger btn-sm">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
                            </form>
                        }
                        else
                        {
                            <form method="post" asp-page-handler="" asp-route-sessionId="@s.Id">
                                <button class="btn btn-success btn-sm"
                                        @(s.CurrentParticipants >= s.MaxParticipants ? "disabled" : "")>
                                    –ó–∞–ø–∏—Å–∞—Ç–∏—Å—å
                                </button>
                            </form>
                        }
                    </td>
                    @{
                        string? cleanError = null;
                        if (TempData["ErrorMessage"] is string rawError)
                        {
                            try
                            {
                                var errorObj = JsonSerializer.Deserialize<Dictionary<string, string>>(rawError);
                                cleanError = errorObj?["message"];
                            }
                            catch
                            {
                                cleanError = rawError;
                            }

                            TempData.Remove("ErrorMessage");
                        }
                    }
                    @if (!string.IsNullOrEmpty(cleanError))
                    {
                        <div class="alert alert-danger">
                            <span class="me-2">‚ùå</span> @cleanError
                        </div>
                    }
                </tr>
            }
            </tbody>
        </table>
    }
    else
    {
        <p>–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥—Ä—É–ø–æ–≤–∏—Ö —Å–µ—Å—ñ–π.</p>
    }
</div>